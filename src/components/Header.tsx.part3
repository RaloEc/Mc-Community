          {/* Barra de búsqueda centrada - solo desktop */}
          <div className="flex-1 max-w-md mx-4 hidden md:block">
            <form onSubmit={handleSearch} className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" />
              <Input
                type="search"
                placeholder="Buscar noticias, hilos..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="pl-10 pr-4 py-2 w-full bg-gray-50 dark:bg-gray-900/50 border-gray-200 dark:border-gray-700 focus:border-blue-500 dark:focus:border-blue-400 rounded-full"
              />
            </form>
          </div>

          {/* Controles de usuario */}
          <div className="flex items-center gap-1 md:gap-3">
            <ModeToggle />
            
            {/* Botones de creación */}
            <div className="hidden lg:flex items-center gap-2">
              {isAdmin && (
                <Link href="/admin/noticias/crear">
                  <Button size="sm" variant="outline" className="text-xs flex items-center gap-1">
                    <PenSquare className="h-3.5 w-3.5" />
                    <span className="hidden xl:inline">Crear Noticia</span>
                  </Button>
                </Link>
              )}
              <Link href={authUser ? "/foro/crear" : "/login?redirect=/foro/crear"}>
                <Button size="sm" variant="outline" className="text-xs flex items-center gap-1">
                  <MessageSquare className="h-3.5 w-3.5" />
                  <span className="hidden xl:inline">Crear Hilo</span>
                </Button>
              </Link>
            </div>

            <div className="hidden md:flex items-center gap-4">
                
              {authUser ? (
                <div className="relative">
                  <button 
                    type="button" 
                    className="flex items-center gap-2 p-1 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors" 
                    onClick={() => setIsUserMenuOpen(!isUserMenuOpen)}
                  >
                    <Avatar className="w-8 h-8">
                      <AvatarImage 
                        src={profile?.avatar_url || authUser?.user_metadata?.avatar_url || authUser?.user_metadata?.picture || undefined} 
                        alt={profile?.username || authUser?.user_metadata?.full_name || authUser?.user_metadata?.name || 'Usuario'} 
                      />
                      <AvatarFallback className="text-xs">{getUserInitials(profile?.username || authUser?.user_metadata?.full_name || '', 1, 'U')}</AvatarFallback>
                    </Avatar>
                    <ChevronDown className="h-4 w-4 text-gray-500" />
                  </button>
                  <div
                    className={`fixed inset-0 z-10 transition-opacity duration-200 ${isUserMenuOpen ? 'opacity-100' : 'opacity-0 pointer-events-none'}`}
                    onClick={() => setIsUserMenuOpen(false)}
                  />
                  <div
                    className={`absolute right-0 z-20 mt-2 w-64 rounded-xl border shadow-lg bg-white/95 dark:bg-black backdrop-blur-md border-gray-200/50 dark:border-gray-800/50 transition-all duration-200 ease-in-out transform origin-top-right ${isUserMenuOpen ? 'scale-100 opacity-100' : 'scale-95 opacity-0 pointer-events-none'}`}
                  >
                    <div className="p-3">
                      <div className="flex items-center px-3 py-3 border-b border-gray-200/50 dark:border-gray-800/50 mb-2">
                        <Avatar className="w-10 h-10 mr-3">
                          <AvatarImage 
                            src={profile?.avatar_url || authUser?.user_metadata?.avatar_url || authUser?.user_metadata?.picture || undefined} 
                            alt={profile?.username || authUser?.user_metadata?.full_name || authUser?.user_metadata?.name || 'Usuario'} 
                          />
                          <AvatarFallback>{getUserInitials(profile?.username || authUser?.user_metadata?.full_name || '', 1, 'U')}</AvatarFallback>
                        </Avatar>
                        <div className="flex-1">
                          <p className="font-medium text-gray-900 dark:text-white text-sm">
                            {profile?.username || authUser?.user_metadata?.full_name || authUser?.user_metadata?.name || authUser?.email?.split('@')[0] || 'Usuario'}
                          </p>
                          <p className="text-xs text-gray-500 dark:text-gray-400">{authUser.email}</p>
                        </div>
                      </div>
                      <div className="space-y-1">
                        <Link 
                          href="/perfil" 
                          className="flex w-full items-center gap-2 rounded-lg px-3 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors" 
                          onClick={() => setIsUserMenuOpen(false)}
                        >
                          <User className="h-4 w-4" />Mi Perfil
                        </Link>
                        {isAdmin && (
                          <Link 
                            href="/admin/dashboard" 
                            className="flex w-full items-center gap-2 rounded-lg px-3 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors" 
                            onClick={() => setIsUserMenuOpen(false)}
                          >
                            <Shield className="h-4 w-4" />Panel Admin
                          </Link>
                        )}
                        <button 
                          onClick={handleLogout} 
                          className="flex w-full items-center gap-2 rounded-lg px-3 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-950/20 transition-colors"
                        >
                          <LogOut className="h-4 w-4" />Cerrar sesión
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              ) : (
                <div className="flex items-center gap-2">
                  <Button variant="ghost" size="sm" onClick={() => openAuthModal('login')}>Iniciar Sesión</Button>
                  <Button size="sm" className="bg-blue-600 hover:bg-blue-700 text-white" onClick={() => openAuthModal('register')}>Registrarse</Button>
                </div>
              )}
            </div>

            {/* Botón de menú móvil */}
            <div className="block md:hidden">
              <Button 
                variant="outline" 
                size="icon" 
                onClick={() => setIsMenuOpen(true)} 
                aria-label="Menú principal" 
                className="ml-1 focus:ring-2 focus:ring-blue-500"
              >
                <Menu className="h-5 w-5" />
              </Button>
            </div>
          </div>
        </div>
      </div>
